# general settings
name: EMT
model_type: IRModel
num_gpu: 1
manual_seed: 42
bit: 0  # data type
scale: 4

datasets:
  type: files

  huggingface:
    huggingface_dir: epishchik/super-resolution-games
    train:
      name: GameEngine_train
      project: GameEngine_All

      # transform
      gt_size: 384
      use_hflip: True
      use_rot: True

      # data loader
      use_shuffle: true
      num_worker_per_gpu: 8
      batch_size_per_gpu: 12
      dataset_enlarge_ratio: 100
      prefetch_mode: ~

    val:
      name: GameEngine_val
      project: GameEngine_All

  files:
    train:
      name: GameEngine_train
      type: IRDataset
      dataroot_gt: datasets/GameEngineData/1080p/train
      dataroot_lq: datasets/GameEngineData/270p/train
      io_backend:
        type: disk

      # transform
      gt_size: 384
      use_hflip: True
      use_rot: True

      # data loader
      use_shuffle: true
      num_worker_per_gpu: 8
      batch_size_per_gpu: 12
      dataset_enlarge_ratio: 100
      prefetch_mode: ~

      # data type
      bit: 0

    val:
      name: GameEngine_val
      type: IRDataset
      dataroot_gt: datasets/GameEngineData/1080p/val
      dataroot_lq: datasets/GameEngineData/270p/val
      io_backend:
       type: disk

      # data type
      bit: 0

# network structures
network_g:
  type: EMT
  dim: 60
  n_blocks: 6
  n_layers: 6
  n_GTLs: 2
  num_heads: 3
  mlp_ratio: 2
  window_list:  [ [32, 8],[8, 32] ]
  shift_list:   [ [16, 4],[4, 16] ]
  upscale: 4
  num_in_ch: 3
  num_out_ch: 3
  task: lsr

network_prefix:
  network_g: net_g

# path
path:
  pretrain_network_g: dvc_data/weights/emt/EMT_LSR_x4.pth
  strict_load_g: true
  resume_state: ~

# training settings
train:
  total_iter: 100000

  # optimizer setting
  optim_g:
    type: Adam
    lr: !!float 3e-4
    weight_decay: 0
    betas: [ 0.9, 0.999 ]

  # scheduler setting
  scheduler:
    type: CosineAnnealingRestartLR
    periods: [ 100000 ]
    restart_weights: [ 1 ]
    eta_min: !!float 1e-6

  # loss setting
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  # perceptual loss (content and style losses)
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      # before relu
      'conv1_2': 0.1
      'conv2_2': 0.1
      'conv3_4': 1
      'conv4_4': 1
      'conv5_4': 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 1.0
    style_weight: 0
    range_norm: false
    criterion: l1

# validation settings
val:
  val_freq: !!float 10e3
  save_img: false
  pbar: true

  metrics:
    psnr: # metric name
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 10e3
  use_tb_logger: false
  wandb:
    project: ~
    resume_id: ~
  mlflow:
    tracking_uri: http://127.0.0.1:5000
    experiment: SRGB train
    run: Finetune EMT_x4 GameEngineData
    log_system_metrics: false

# dist training settings
dist_params:
  backend: nccl
  port: 29500
