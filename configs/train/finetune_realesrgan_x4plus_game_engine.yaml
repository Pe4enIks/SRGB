# general settings
name: finetune_RealESRGANx4plus_GameEngineData
model_type: RealESRGANModel
scale: 4
num_gpu: 1
manual_seed: 0

# USM the ground-truth
l1_gt_usm: True
percep_gt_usm: True
gan_gt_usm: False

# do not use the high-order degradation generation process
high_order_degradation: False

# dataset and data loader settings
datasets:
  type: files

  huggingface:
    huggingface_dir: epishchik/super-resolution-games
    train:
      name: GameEngine_train
      project: GameEngine_All

      # transform
      gt_size: 256
      use_hflip: True
      use_rot: True

      # data loader
      use_shuffle: true
      num_worker_per_gpu: 8
      batch_size_per_gpu: 12
      dataset_enlarge_ratio: 1
      prefetch_mode: ~

    val:
      name: GameEngine_val
      project: GameEngine_All

  files:
    train:
      name: GameEngine_train
      type: RealESRGANPairedDataset
      dataroot_gt: datasets/GameEngineData/1080p/train
      dataroot_lq: datasets/GameEngineData/270p/train
      io_backend:
        type: disk

      # transform
      gt_size: 256
      use_hflip: True
      use_rot: True

      # data loader
      use_shuffle: true
      num_worker_per_gpu: 8
      batch_size_per_gpu: 12
      dataset_enlarge_ratio: 1
      prefetch_mode: ~

    val:
      name: GameEngine_val
      type: PairedImageDataset
      dataroot_gt: datasets/GameEngineData/1080p/val
      dataroot_lq: datasets/GameEngineData/270p/val
      io_backend:
       type: disk


# network structures
network_g:
  type: RRDBNet
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 23
  num_grow_ch: 32

network_d:
  type: UNetDiscriminatorSN
  num_in_ch: 3
  num_feat: 64
  skip_connection: True

network_prefix:
  network_g: net_g
  network_d: net_d

# path
path:
  # use the pre-trained Real-ESRNet model
  pretrain_network_g: dvc_data/weights/real-esrgan/RealESRNet_x4plus.pth
  param_key_g: params_ema
  strict_load_g: true
  pretrain_network_d: dvc_data/weights/real-esrgan/RealESRGAN_x4plus_netD.pth
  param_key_d: params
  strict_load_d: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [100000]
    gamma: 0.5

  total_iter: 100000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  # perceptual loss (content and style losses)
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      # before relu
      'conv1_2': 0.1
      'conv2_2': 0.1
      'conv3_4': 1
      'conv4_4': 1
      'conv5_4': 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 1.0
    style_weight: 0
    range_norm: false
    criterion: l1
  # gan loss
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 1e-1

  net_d_iters: 1
  net_d_init_iters: 0

# validation settings
val:
  val_freq: !!float 5e3
  save_img: false
  pbar: true
  use_first_n_batches: ~

  metrics:
    psnr: # metric name
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: false
  wandb:
    project: ~
    resume_id: ~
  mlflow:
    tracking_uri: http://127.0.0.1:5000
    experiment: SRGB train
    run: Finetune RealESRGAN_x4plus GameEngineData
    log_system_metrics: false


# dist training settings
dist_params:
  backend: nccl
  port: 29500
